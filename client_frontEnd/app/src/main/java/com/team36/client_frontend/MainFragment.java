package com.team36.client_frontend;

import android.Manifest;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.design.widget.BottomNavigationView;
import android.support.v4.app.ActivityCompat;
import android.support.v4.app.Fragment;
import android.support.v4.content.ContextCompat;
import android.view.LayoutInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ListView;
import android.widget.RatingBar;
import android.widget.TextView;

import java.util.ArrayList;

public class MainFragment extends Fragment {
    public final String TITLE = "Your Home";

    private static final int REQUEST_LOCATION = 1111;
    private View returnView;

    final private String welcome_message = "Hi %s, see your rating below!";

    final static String users_name = "David";
    final static double users_rating = 4.2;

    private int[] friend_pps = {R.drawable.baseline_person_outline_black_36};
    private String[] friend_names = {"Cam", "Josh", "Dave", "Cybs", "George", "Javier"};
    private double[] friend_ratings = {4.0, 5.0, 4.0, 4.0, 5.0, 4.5};

    private String[] journey_dates = {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Sunday"};
    private double[] journeyRatings = {3.0, 4.5, 4.5, 3.5, 5.0, 4.0};

    // This method is for the navigation in the 'At a Glance' section and has the job of switching
    // what is displayed in the listView below it, being either basic friend or basic journey details
    private BottomNavigationView.OnNavigationItemSelectedListener myAtAGlanceNavigationListener
            = new BottomNavigationView.OnNavigationItemSelectedListener() {

        @Override
        public boolean onNavigationItemSelected(@NonNull MenuItem item) {
            switch (item.getItemId()) {
                case R.id.navigation_friends:
                    // This method displays basic information about the users' friends
                    atAGlance_friends();
                    return true;
                case R.id.navigation_journeys:
                    // This method displays basic information about the users' journeys
                    atAGlance_journeys();
                    return true;
            }
            return false;
        }
    };

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        returnView = inflater.inflate(R.layout.fragment_main, container, false);

        BottomNavigationView navigation_atAGlance = returnView.findViewById(R.id.navigation_atAGlance);
        navigation_atAGlance.setOnNavigationItemSelectedListener(myAtAGlanceNavigationListener);
        // This navigation listener is for changing what is displayed in the 'At a Glance' section

        myMain(); /* This method acts as a (main) method to differentiate between my code and
                   * the code that was automatically generated by Android Studio */

        Button button_go = returnView.findViewById(R.id.button_go);
        button_go.setOnClickListener(this::onClick);

        return returnView;
    }

    // This method changes the 'At a Glance' section to display basic information about the user's friends
    private void atAGlance_friends(){
        ArrayList<listview_item> allRows = new ArrayList<>(); // To store all the rows to be displayed
        ListView myListView = returnView.findViewById(R.id.listView_atAGlance);

        // This for-loop assigns values to the components of each row
        if ((friend_names.length != 0) && (friend_names != null)) {
            for (int i = 0; i < friend_names.length; i++) {
                listview_item oneRow = new listview_item(); // Creates a new row
                // The below assigns each of the values to their corresponding components
                oneRow.setImage_pp(friend_pps[0]);
                oneRow.setText_name(friend_names[i]);
                oneRow.setRating_stars((float) friend_ratings[i]);
                oneRow.setRating_double(friend_ratings[i]);

                allRows.add(oneRow); // Adds each row to the list of rows to be added to the listView below
            }
        }

        // The friends_adapter is for adding all the users' friends to the listView
        myAdapter friends_adapter = new myAdapter(getContext(), allRows);
        myListView.setAdapter(friends_adapter);
    }

    // This method changes the 'At a Glance' section to display basic information about the user's journeys
    private void atAGlance_journeys(){
        ArrayList<listview_itemJourneys> allRows = new ArrayList<>(); // As stated previously
        ListView myListView = returnView.findViewById(R.id.listView_atAGlance);

        if ((journey_dates.length != 0) && (journey_dates != null)) {
            for (int i = 0; i < journey_dates.length; i++) {
                listview_itemJourneys oneRow = new listview_itemJourneys(); // Creates a new row
                // Below assigns values to their corresponding components
                oneRow.setText_journeyDate(journey_dates[i]);
                oneRow.setRating_stars((float) journeyRatings[i]);

                allRows.add(oneRow); // Adds each row to the list of rows
            }
        }

        // The journeys_adapter is is for adding all the user's journeys to the listView
        myAdapter_journeys journeys_adapter = new myAdapter_journeys(getContext(), allRows);
        myListView.setAdapter(journeys_adapter);
    }

    private void myMain(){
        atAGlance_friends(); // Causes friends to be displayed automatically without user interaction
        setWelcomeTextRating();
    }

    private void setWelcomeTextRating(){
        TextView textView_welcome = returnView.findViewById(R.id.textView_welcome);
        textView_welcome.setText(String.format(welcome_message, users_name));

        RatingBar ratingBar_user = returnView.findViewById(R.id.ratingBar_user);
        ratingBar_user.setRating((float)users_rating);
    }

    public void onClick(View view){
        boolean requested = false;

        while (ContextCompat.checkSelfPermission(returnView.getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED){
           if (!requested){
               ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION}, REQUEST_LOCATION);
               requested = true;
           }
        }

        Intent driving = new Intent(getActivity(), DrivingEsri.class);
        startActivity(driving);
    }
}
